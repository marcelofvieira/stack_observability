# my global config
global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'my-project'

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  # - "first.rules"
  # - "second.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.

  - job_name: 'prometheus'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    static_configs:
         - targets: ['localhost:9090']


  - job_name: 'cadvisor'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    dns_sd_configs:
    - names:
      - 'tasks.cadvisor'
      type: 'A'
      port: 8080

    static_configs:
        - targets: ['cadvisor:8080']
        
  - job_name: 'jaeger'

    scrape_interval: 5s

    static_configs:
         - targets: ['jaeger:8888']
         
  - job_name: 'nodeexporter'
    scrape_interval: 5s
    static_configs:
         - targets: ['nodeexporter:9100']
         
  #- job_name: 'generic-service'
  #  dns_sd_configs:
  #    - names:
  #        - 'tasks.generic-service'
  #      type: 'A'
  #      port: 9005
  #  metrics_path: '/actuator/prometheus'


  #- job_name: 'generic-service'
  #  scrape_interval: 5s
  #
  #  metrics_path: /actuator/prometheus
  #  
  #  static_configs:
  #       - targets: ['genericservice:9005']
